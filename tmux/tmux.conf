set-option -g prefix C-a
set-option -sg escape-time 10
set-option -g focus-events on
set -g repeat-time 1000

bind S command-prompt -p "New Session:" "new-session -A -s '%%'"
bind K confirm kill-session

# reload config file (change file location to your the tmux.conf you want to use)
unbind "r"
bind r source-file ~/.config/tmux/tmux.conf

# No bell sound
set -g bell-action none

# Fix italic font
set -g default-terminal "xterm-256color"

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-features ',xterm-256color:RGB'

# split panes
unbind '"'
unbind %
bind h split-window -h
bind v split-window -v

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# don't rename windows automatically
set-option -g allow-rename off

unbind "q"
bind q confirm-before -p "kill-session #S? (y/n)" kill-session

# Resize panes
bind-key -r -T prefix       C-K             resize-pane -U 5
bind-key -r -T prefix       C-J             resize-pane -D 5
bind-key -r -T prefix       C-H             resize-pane -L 5
bind-key -r -T prefix       C-L             resize-pane -R 5
bind-key -r -T prefix       M-C-K           resize-pane -U
bind-key -r -T prefix       M-C-J           resize-pane -D
bind-key -r -T prefix       M-C-H           resize-pane -L
bind-key -r -T prefix       M-C-L           resize-pane -R

# Scripts
unbind "t"
bind-key -n -T prefix       C-T             run-shell -b "~/.config/tmux/scripts/popup.sh float"

unbind "s"
bind-key "s" run-shell "sesh connect \"$(
	sesh list -tz | fzf-tmux -p 55%,60% \
		--no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
)\""

unbind "x"
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# neovim checkhealth recommendations (EXPERIMENTAL)
set-option -sg escape-time 10
set-option -g focus-events on
set-option -sa terminal-features ',xterm-256color:RGB'
set-option -ga terminal-overrides ',xterm-256color:Tc'


# List of plugins
# Don't forget to "<leader> I" after reinstall or edit
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect' # tmux sessions persist after resart
set -g @plugin 'tmux-plugins/tmux-continuum' # autosaves sessions each 15 minutes

# Auto-Saving
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'

# Theme
# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, tmux-ram-usage, network, network-bandwidth, network-ping, attached-clients, network-vpn, weather, time, spotify-tui, kubernetes-context, synchronize-panes
set -g @dracula-show-powerline true
set -g @dracula-show-empty-plugins false
set -g @dracula-show-left-icon session
set -g @dracula-plugins "cpu-usage battery ram-usage"
set -g @dracula-cpu-usage-label "üíª"
set -g @dracula-battery-label "üîã"
set -g @dracula-ram-usage-label "üíæ"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
